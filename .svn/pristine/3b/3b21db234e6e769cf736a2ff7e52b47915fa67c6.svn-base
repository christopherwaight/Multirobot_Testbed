function [] = AttractProperties(data,Num_Robots)
g = ceil(sqrt(numel(data)));
figure
for j = 1:length(data)
    % Create square grid of subplots for all parallel simulations
    P = subplot(g,g,j);
    hold on
    for i = 1:Num_Robots
        Xf(i,1) = data(1,j).robot(i).x(end);
        Xf(i,2) = data(1,j).robot(i).y(end);
        for k = 1:Num_Robots
            ds(i,k) = sqrt((data(1,j).robot(i).x(end)-data(1,j).robot(k).x(end))^2 + (data(1,j).robot(i).y(end)-data(1,j).robot(k).y(end))^2);
        end
    end
    [A , c] = MinVolEllipse(Xf', 0.001);
    if Num_Robots>2
        %Ellipse_plot(A, c)
        scatter(Xf(:,1), Xf(:,2))
        thetas = 0:1:360; 
        a_radius = 1; 
        b_radius = 1; 
        scatter(sum(Xf(:,1))/Num_Robots,sum(Xf(:,2))/Num_Robots,'kx')
        plot(a_radius*cosd(thetas)+ sum(Xf(:,1))/Num_Robots, a_radius*sind(thetas)+ sum(Xf(:,2))/Num_Robots,'-.');
       % plot(b_radius*cosd(thetas)+ sum(Xf(:,1))/Num_Robots, b_radius*sind(thetas)+ sum(Xf(:,2))/Num_Robots,'m--');
        axis equal
        box on
        hold off
        [~, D, ~] = svd(A);

        % get the major and minor axes
        %------------------------------------
        a(j) = 1/sqrt(D(1,1));
        b(j) = 1/sqrt(D(2,2));
        dmax(j) = max(max(ds)); 
    end
    %% Calculate max distance for simulation
end
if Num_Robots>2
    disp('The minor axes were:')
    disp(a)
    disp('The major axes were:')
    disp(b)
    disp('Min and max minor axis were:')
    disp(min(a))
    disp(max(a))
    disp('Min and max major axis were:')
    disp(min(b))
    disp(max(b))
    disp('Average minor axis and average major axis were')
    disp(mean(a))
    disp(mean(b))
    disp('Standard dev for minor axis and major axis were')
    disp(std(a))
    disp(std(b))
    e = sqrt(1 - (a./b).^2); 
    disp('All eccentricities:')
    disp(e); 
    disp('Min and max eccentricity')
    disp(min(e)); 
    disp(max(e)); 
    disp('Average eccentricity:')
    disp(mean(e));
    disp('Max Distance between robots')
    disp(dmax); 
    disp('Max and min distances') 
    disp(max(dmax)); 
    disp(min(dmax)); 
    disp('Mean distances')
    disp(mean(dmax))
end
end


